<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.fast.controller" />
	<!-- <mvc:resources mapping="/images/**" location="/images/" cache-period="86400" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/layui/**" location="/layui/" /> -->
	<mvc:annotation-driven />
    <!-- <mvc:annotation-driven> 
        <mvc:message-converters> 
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
                <property name="objectMapper" value="#{jsonUtils.mapper}"/> 
                <property name="supportedMediaTypes"> 
                    <list> 
                    <value>text/json;charset=UTF-8</value> 
                    </list> 
                </property> 
            </bean> 
        </mvc:message-converters> 
    </mvc:annotation-driven>-->
    <mvc:default-servlet-handler/>

	<!-- 拦截器 -->
	<mvc:interceptors> 
    <!-- 多个拦截器,顺序执行 -->
        <mvc:interceptor>
            <mvc:mapping path="/*" />
            <mvc:exclude-mapping path="/" />
            <mvc:exclude-mapping path="/login.*" />
            <mvc:exclude-mapping path="/login/**" />
            <mvc:exclude-mapping path="/open.*" />
            <mvc:exclude-mapping path="/open/**" />
            <mvc:exclude-mapping path="/mini.*" />
            <mvc:exclude-mapping path="/mini/**" />
            <bean class="com.fast.system.Filter"></bean> 
        </mvc:interceptor> 
	</mvc:interceptors>

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
    
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/page/" p:suffix=".jsp" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>32505856</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	<!-- 忽略url大小写 -->
	<bean name="caseInsensitivePathMatcher" class="com.fast.system.CaseInsensitiveAntPathMatcher" />
	<bean name="handlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="pathMatcher" ref="caseInsensitivePathMatcher"></property>
	</bean>
	
	<!-- 要调用的工作类 -->
    <bean id="quartzTask" class="com.fast.task.QuartzTask"/> 
    <!-- 将需要执行的定时任务注入JOB中。 -->
    <bean id="testJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="quartzTask"/>
        <!-- 任务类中需要执行的方法 -->
        <property name="targetMethod" value="execute"/>
        <!-- 上一次未执行完成的，要等待有再执行。 -->
        <property name="concurrent" value="false"/>
    </bean> 
    <!-- 定义trigger 触发器 [58秒执行一次]-->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="testJob"/>
        <property name="cronExpression" value="*/58 * * * * ?"/>
    </bean> 
    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
    <bean id="startQuertz" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
    </bean>
</beans>