<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fast.base.data.dao.MMiniprogramMapper" >
  <resultMap id="BaseResultMap" type="com.fast.base.data.entity.MMiniprogram" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="Code" property="code" jdbcType="VARCHAR" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="AppID" property="appid" jdbcType="VARCHAR" />
    <result column="AppSecret" property="appsecret" jdbcType="VARCHAR" />
    <result column="PublicPlatformID" property="publicplatformid" jdbcType="INTEGER" />
    <result column="PhotoUrl" property="photourl" jdbcType="VARCHAR" />
    <result column="UseFlag" property="useflag" jdbcType="TINYINT" />
    <result column="Type" property="type" jdbcType="TINYINT" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="Creator" property="creator" jdbcType="VARCHAR" />
    <result column="ModifyTime" property="modifytime" jdbcType="TIMESTAMP" />
    <result column="Modifier" property="modifier" jdbcType="VARCHAR" />
    <result column="UpdatedTime" property="updatedtime" jdbcType="TIMESTAMP" />
    <result column="AgentID" property="agentid" jdbcType="VARCHAR" />
    <result column="Secret" property="secret" jdbcType="VARCHAR" />
    <result column="Memo" property="memo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, Code, Name, AppID, AppSecret, PublicPlatformID, PhotoUrl, UseFlag, Type, CreateTime, 
    Creator, ModifyTime, Modifier, UpdatedTime, AgentID, Secret, Memo
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fast.base.data.entity.MMiniprogramExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from m_miniprogram
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_miniprogram
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_miniprogram
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fast.base.data.entity.MMiniprogramExample" >
    delete from m_miniprogram
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fast.base.data.entity.MMiniprogram" >
    insert into m_miniprogram (ID, Code, Name, 
      AppID, AppSecret, PublicPlatformID, 
      PhotoUrl, UseFlag, Type, 
      CreateTime, Creator, ModifyTime, 
      Modifier, UpdatedTime, AgentID, 
      Secret, Memo)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{appid,jdbcType=VARCHAR}, #{appsecret,jdbcType=VARCHAR}, #{publicplatformid,jdbcType=INTEGER}, 
      #{photourl,jdbcType=VARCHAR}, #{useflag,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{modifytime,jdbcType=TIMESTAMP}, 
      #{modifier,jdbcType=VARCHAR}, #{updatedtime,jdbcType=TIMESTAMP}, #{agentid,jdbcType=VARCHAR}, 
      #{secret,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fast.base.data.entity.MMiniprogram" >
    insert into m_miniprogram
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="code != null" >
        Code,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="appid != null" >
        AppID,
      </if>
      <if test="appsecret != null" >
        AppSecret,
      </if>
      <if test="publicplatformid != null" >
        PublicPlatformID,
      </if>
      <if test="photourl != null" >
        PhotoUrl,
      </if>
      <if test="useflag != null" >
        UseFlag,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="creator != null" >
        Creator,
      </if>
      <if test="modifytime != null" >
        ModifyTime,
      </if>
      <if test="modifier != null" >
        Modifier,
      </if>
      <if test="updatedtime != null" >
        UpdatedTime,
      </if>
      <if test="agentid != null" >
        AgentID,
      </if>
      <if test="secret != null" >
        Secret,
      </if>
      <if test="memo != null" >
        Memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="appid != null" >
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="appsecret != null" >
        #{appsecret,jdbcType=VARCHAR},
      </if>
      <if test="publicplatformid != null" >
        #{publicplatformid,jdbcType=INTEGER},
      </if>
      <if test="photourl != null" >
        #{photourl,jdbcType=VARCHAR},
      </if>
      <if test="useflag != null" >
        #{useflag,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="updatedtime != null" >
        #{updatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="agentid != null" >
        #{agentid,jdbcType=VARCHAR},
      </if>
      <if test="secret != null" >
        #{secret,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fast.base.data.entity.MMiniprogramExample" resultType="java.lang.Integer" >
    select count(*) from m_miniprogram
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.fast.base.data.entity.MMiniprogram" >
    update m_miniprogram
    <set >
      <if test="code != null" >
        Code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="appid != null" >
        AppID = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="appsecret != null" >
        AppSecret = #{appsecret,jdbcType=VARCHAR},
      </if>
      <if test="publicplatformid != null" >
        PublicPlatformID = #{publicplatformid,jdbcType=INTEGER},
      </if>
      <if test="photourl != null" >
        PhotoUrl = #{photourl,jdbcType=VARCHAR},
      </if>
      <if test="useflag != null" >
        UseFlag = #{useflag,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        Creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null" >
        ModifyTime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        Modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="updatedtime != null" >
        UpdatedTime = #{updatedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="agentid != null" >
        AgentID = #{agentid,jdbcType=VARCHAR},
      </if>
      <if test="secret != null" >
        Secret = #{secret,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        Memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fast.base.data.entity.MMiniprogram" >
    update m_miniprogram
    set Code = #{code,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      AppID = #{appid,jdbcType=VARCHAR},
      AppSecret = #{appsecret,jdbcType=VARCHAR},
      PublicPlatformID = #{publicplatformid,jdbcType=INTEGER},
      PhotoUrl = #{photourl,jdbcType=VARCHAR},
      UseFlag = #{useflag,jdbcType=TINYINT},
      Type = #{type,jdbcType=TINYINT},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      Creator = #{creator,jdbcType=VARCHAR},
      ModifyTime = #{modifytime,jdbcType=TIMESTAMP},
      Modifier = #{modifier,jdbcType=VARCHAR},
      UpdatedTime = #{updatedtime,jdbcType=TIMESTAMP},
      AgentID = #{agentid,jdbcType=VARCHAR},
      Secret = #{secret,jdbcType=VARCHAR},
      Memo = #{memo,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>