<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fast.base.data.dao.MVipminidataMapper">
  <resultMap id="BaseResultMap" type="com.fast.base.data.entity.MVipminidata">
    <result column="ID" jdbcType="INTEGER" property="id" />
    <result column="MiniProgramID" jdbcType="INTEGER" property="miniprogramid" />
    <result column="OpenID" jdbcType="VARCHAR" property="openid" />
    <result column="UnionID" jdbcType="VARCHAR" property="unionid" />
    <result column="VipID" jdbcType="INTEGER" property="vipid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fast.base.data.entity.MVipminidata">
    <result column="UpdatedTime" jdbcType="BINARY" property="updatedtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, MiniProgramID, OpenID, UnionID, VipID
  </sql>
  <sql id="Blob_Column_List">
    UpdatedTime
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fast.base.data.entity.MVipminidataExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from m_vipminidata
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fast.base.data.entity.MVipminidataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from m_vipminidata
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fast.base.data.entity.MVipminidataExample">
    delete from m_vipminidata
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fast.base.data.entity.MVipminidata">
    insert into m_vipminidata (ID, MiniProgramID, OpenID, 
      UnionID, VipID, UpdatedTime
      )
    values (#{id,jdbcType=INTEGER}, #{miniprogramid,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, 
      #{unionid,jdbcType=VARCHAR}, #{vipid,jdbcType=INTEGER}, #{updatedtime,jdbcType=BINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fast.base.data.entity.MVipminidata">
    insert into m_vipminidata
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="miniprogramid != null">
        MiniProgramID,
      </if>
      <if test="openid != null">
        OpenID,
      </if>
      <if test="unionid != null">
        UnionID,
      </if>
      <if test="vipid != null">
        VipID,
      </if>
      <if test="updatedtime != null">
        UpdatedTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="miniprogramid != null">
        #{miniprogramid,jdbcType=INTEGER},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="vipid != null">
        #{vipid,jdbcType=INTEGER},
      </if>
      <if test="updatedtime != null">
        #{updatedtime,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fast.base.data.entity.MVipminidataExample" resultType="java.lang.Long">
    select count(*) from m_vipminidata
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update m_vipminidata
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.miniprogramid != null">
        MiniProgramID = #{record.miniprogramid,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null">
        OpenID = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.unionid != null">
        UnionID = #{record.unionid,jdbcType=VARCHAR},
      </if>
      <if test="record.vipid != null">
        VipID = #{record.vipid,jdbcType=INTEGER},
      </if>
      <if test="record.updatedtime != null">
        UpdatedTime = #{record.updatedtime,jdbcType=BINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update m_vipminidata
    set ID = #{record.id,jdbcType=INTEGER},
      MiniProgramID = #{record.miniprogramid,jdbcType=INTEGER},
      OpenID = #{record.openid,jdbcType=VARCHAR},
      UnionID = #{record.unionid,jdbcType=VARCHAR},
      VipID = #{record.vipid,jdbcType=INTEGER},
      UpdatedTime = #{record.updatedtime,jdbcType=BINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update m_vipminidata
    set ID = #{record.id,jdbcType=INTEGER},
      MiniProgramID = #{record.miniprogramid,jdbcType=INTEGER},
      OpenID = #{record.openid,jdbcType=VARCHAR},
      UnionID = #{record.unionid,jdbcType=VARCHAR},
      VipID = #{record.vipid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>