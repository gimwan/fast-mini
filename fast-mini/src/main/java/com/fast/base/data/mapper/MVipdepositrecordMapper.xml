<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fast.base.data.dao.MVipdepositrecordMapper">
	<cache type="com.fast.system.RedisCache" />
	<resultMap id="BaseResultMap" type="com.fast.base.data.entity.MVipdepositrecord">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="VipID" property="vipid" jdbcType="INTEGER" />
		<result column="Deposit" property="deposit" jdbcType="DECIMAL" />
		<result column="NewDeposit" property="newdeposit" jdbcType="DECIMAL" />
		<result column="Type" property="type" jdbcType="TINYINT" />
		<result column="UpdatedTime" property="updatedtime" jdbcType="TIMESTAMP" />
		<result column="Memo" property="memo" jdbcType="VARCHAR" />
		<result column="Refid" property="refid" jdbcType="INTEGER" />
		<result column="ExtID" property="extid" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, VipID, Deposit, NewDeposit, Type, UpdatedTime, Memo, Refid, ExtID
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.fast.base.data.entity.MVipdepositrecordExample">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from m_vipdepositrecord
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from m_vipdepositrecord
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from m_vipdepositrecord
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.fast.base.data.entity.MVipdepositrecordExample">
		delete from m_vipdepositrecord
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.fast.base.data.entity.MVipdepositrecord"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into m_vipdepositrecord (ID, VipID, Deposit,
		NewDeposit, Type, UpdatedTime,
		Memo, Refid, ExtID)
		values (#{id,jdbcType=INTEGER}, #{vipid,jdbcType=INTEGER},
		#{deposit,jdbcType=DECIMAL},
		#{newdeposit,jdbcType=DECIMAL}, #{type,jdbcType=TINYINT}, #{updatedtime,jdbcType=TIMESTAMP},
		#{memo,jdbcType=VARCHAR}, #{refid,jdbcType=INTEGER},
		#{extid,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.fast.base.data.entity.MVipdepositrecord"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into m_vipdepositrecord
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="vipid != null">
				VipID,
			</if>
			<if test="deposit != null">
				Deposit,
			</if>
			<if test="newdeposit != null">
				NewDeposit,
			</if>
			<if test="type != null">
				Type,
			</if>
			<if test="updatedtime != null">
				UpdatedTime,
			</if>
			<if test="memo != null">
				Memo,
			</if>
			<if test="refid != null">
				Refid,
			</if>
			<if test="extid != null">
				ExtID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="vipid != null">
				#{vipid,jdbcType=INTEGER},
			</if>
			<if test="deposit != null">
				#{deposit,jdbcType=DECIMAL},
			</if>
			<if test="newdeposit != null">
				#{newdeposit,jdbcType=DECIMAL},
			</if>
			<if test="type != null">
				#{type,jdbcType=TINYINT},
			</if>
			<if test="updatedtime != null">
				#{updatedtime,jdbcType=TIMESTAMP},
			</if>
			<if test="memo != null">
				#{memo,jdbcType=VARCHAR},
			</if>
			<if test="refid != null">
				#{refid,jdbcType=INTEGER},
			</if>
			<if test="extid != null">
				#{extid,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.fast.base.data.entity.MVipdepositrecordExample"
		resultType="java.lang.Integer">
		select count(*) from m_vipdepositrecord
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.fast.base.data.entity.MVipdepositrecord">
		update m_vipdepositrecord
		<set>
			<if test="vipid != null">
				VipID = #{vipid,jdbcType=INTEGER},
			</if>
			<if test="deposit != null">
				Deposit = #{deposit,jdbcType=DECIMAL},
			</if>
			<if test="newdeposit != null">
				NewDeposit = #{newdeposit,jdbcType=DECIMAL},
			</if>
			<if test="type != null">
				Type = #{type,jdbcType=TINYINT},
			</if>
			<if test="updatedtime != null">
				UpdatedTime = #{updatedtime,jdbcType=TIMESTAMP},
			</if>
			<if test="memo != null">
				Memo = #{memo,jdbcType=VARCHAR},
			</if>
			<if test="refid != null">
				Refid = #{refid,jdbcType=INTEGER},
			</if>
			<if test="extid != null">
				ExtID = #{extid,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.fast.base.data.entity.MVipdepositrecord">
		update m_vipdepositrecord
		set VipID = #{vipid,jdbcType=INTEGER},
		Deposit = #{deposit,jdbcType=DECIMAL},
		NewDeposit = #{newdeposit,jdbcType=DECIMAL},
		Type = #{type,jdbcType=TINYINT},
		UpdatedTime = #{updatedtime,jdbcType=TIMESTAMP},
		Memo = #{memo,jdbcType=VARCHAR},
		Refid = #{refid,jdbcType=INTEGER},
		ExtID = #{extid,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>