<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fast.base.data.dao.MOrderdtlMapper">
	<cache type="com.fast.system.RedisCache" />
	<resultMap id="BaseResultMap" type="com.fast.base.data.entity.MOrderdtl">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="GoodsID" jdbcType="INTEGER" property="goodsid" />
		<result column="ColorID" jdbcType="INTEGER" property="colorid" />
		<result column="PatternID" jdbcType="INTEGER" property="patternid" />
		<result column="SizeID" jdbcType="INTEGER" property="sizeid" />
		<result column="Quantity" jdbcType="INTEGER" property="quantity" />
		<result column="Price" jdbcType="DECIMAL" property="price" />
		<result column="BasePrice" jdbcType="DECIMAL" property="baseprice" />
		<result column="Amount" jdbcType="DECIMAL" property="amount" />
		<result column="SalePrice" jdbcType="DECIMAL" property="saleprice" />
		<result column="BaseAmount" jdbcType="DECIMAL" property="baseamount" />
		<result column="SaleAmount" jdbcType="DECIMAL" property="saleamount" />
		<result column="CreateTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="Creator" jdbcType="VARCHAR" property="creator" />
		<result column="ModifyTime" jdbcType="TIMESTAMP" property="modifytime" />
		<result column="Modifier" jdbcType="VARCHAR" property="modifier" />
		<result column="UpdatedTime" jdbcType="TIMESTAMP" property="updatedtime" />
		<result column="UseFlag" jdbcType="TINYINT" property="useflag" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, GoodsID, ColorID, PatternID, SizeID, Quantity, Price, BasePrice,
		Amount, SalePrice,
		BaseAmount, SaleAmount, CreateTime, Creator, ModifyTime, Modifier, UpdatedTime,
		UseFlag
	</sql>
	<select id="selectByExample" parameterType="com.fast.base.data.entity.MOrderdtlExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from m_orderdtl
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from m_orderdtl
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from m_orderdtl
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.fast.base.data.entity.MOrderdtlExample">
		delete from m_orderdtl
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.fast.base.data.entity.MOrderdtl"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into m_orderdtl (ID, GoodsID, ColorID,
		PatternID, SizeID, Quantity,
		Price, BasePrice, Amount,
		SalePrice, BaseAmount, SaleAmount,
		CreateTime, Creator, ModifyTime,
		Modifier, UpdatedTime, UseFlag
		)
		values (#{id,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER},
		#{colorid,jdbcType=INTEGER},
		#{patternid,jdbcType=INTEGER}, #{sizeid,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER},
		#{price,jdbcType=DECIMAL}, #{baseprice,jdbcType=DECIMAL},
		#{amount,jdbcType=DECIMAL},
		#{saleprice,jdbcType=DECIMAL}, #{baseamount,jdbcType=DECIMAL}, #{saleamount,jdbcType=DECIMAL},
		#{createtime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR},
		#{modifytime,jdbcType=TIMESTAMP},
		#{modifier,jdbcType=VARCHAR}, #{updatedtime,jdbcType=TIMESTAMP}, #{useflag,jdbcType=TINYINT}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.fast.base.data.entity.MOrderdtl"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into m_orderdtl
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="goodsid != null">
				GoodsID,
			</if>
			<if test="colorid != null">
				ColorID,
			</if>
			<if test="patternid != null">
				PatternID,
			</if>
			<if test="sizeid != null">
				SizeID,
			</if>
			<if test="quantity != null">
				Quantity,
			</if>
			<if test="price != null">
				Price,
			</if>
			<if test="baseprice != null">
				BasePrice,
			</if>
			<if test="amount != null">
				Amount,
			</if>
			<if test="saleprice != null">
				SalePrice,
			</if>
			<if test="baseamount != null">
				BaseAmount,
			</if>
			<if test="saleamount != null">
				SaleAmount,
			</if>
			<if test="createtime != null">
				CreateTime,
			</if>
			<if test="creator != null">
				Creator,
			</if>
			<if test="modifytime != null">
				ModifyTime,
			</if>
			<if test="modifier != null">
				Modifier,
			</if>
			<if test="updatedtime != null">
				UpdatedTime,
			</if>
			<if test="useflag != null">
				UseFlag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="goodsid != null">
				#{goodsid,jdbcType=INTEGER},
			</if>
			<if test="colorid != null">
				#{colorid,jdbcType=INTEGER},
			</if>
			<if test="patternid != null">
				#{patternid,jdbcType=INTEGER},
			</if>
			<if test="sizeid != null">
				#{sizeid,jdbcType=INTEGER},
			</if>
			<if test="quantity != null">
				#{quantity,jdbcType=INTEGER},
			</if>
			<if test="price != null">
				#{price,jdbcType=DECIMAL},
			</if>
			<if test="baseprice != null">
				#{baseprice,jdbcType=DECIMAL},
			</if>
			<if test="amount != null">
				#{amount,jdbcType=DECIMAL},
			</if>
			<if test="saleprice != null">
				#{saleprice,jdbcType=DECIMAL},
			</if>
			<if test="baseamount != null">
				#{baseamount,jdbcType=DECIMAL},
			</if>
			<if test="saleamount != null">
				#{saleamount,jdbcType=DECIMAL},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="modifytime != null">
				#{modifytime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifier != null">
				#{modifier,jdbcType=VARCHAR},
			</if>
			<if test="updatedtime != null">
				#{updatedtime,jdbcType=TIMESTAMP},
			</if>
			<if test="useflag != null">
				#{useflag,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.fast.base.data.entity.MOrderdtlExample"
		resultType="java.lang.Long">
		select count(*) from m_orderdtl
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.fast.base.data.entity.MOrderdtl">
		update m_orderdtl
		<set>
			<if test="goodsid != null">
				GoodsID = #{goodsid,jdbcType=INTEGER},
			</if>
			<if test="colorid != null">
				ColorID = #{colorid,jdbcType=INTEGER},
			</if>
			<if test="patternid != null">
				PatternID = #{patternid,jdbcType=INTEGER},
			</if>
			<if test="sizeid != null">
				SizeID = #{sizeid,jdbcType=INTEGER},
			</if>
			<if test="quantity != null">
				Quantity = #{quantity,jdbcType=INTEGER},
			</if>
			<if test="price != null">
				Price = #{price,jdbcType=DECIMAL},
			</if>
			<if test="baseprice != null">
				BasePrice = #{baseprice,jdbcType=DECIMAL},
			</if>
			<if test="amount != null">
				Amount = #{amount,jdbcType=DECIMAL},
			</if>
			<if test="saleprice != null">
				SalePrice = #{saleprice,jdbcType=DECIMAL},
			</if>
			<if test="baseamount != null">
				BaseAmount = #{baseamount,jdbcType=DECIMAL},
			</if>
			<if test="saleamount != null">
				SaleAmount = #{saleamount,jdbcType=DECIMAL},
			</if>
			<if test="createtime != null">
				CreateTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="creator != null">
				Creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="modifytime != null">
				ModifyTime = #{modifytime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifier != null">
				Modifier = #{modifier,jdbcType=VARCHAR},
			</if>
			<if test="updatedtime != null">
				UpdatedTime = #{updatedtime,jdbcType=TIMESTAMP},
			</if>
			<if test="useflag != null">
				UseFlag = #{useflag,jdbcType=TINYINT},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.fast.base.data.entity.MOrderdtl">
		update m_orderdtl
		set GoodsID = #{goodsid,jdbcType=INTEGER},
		ColorID = #{colorid,jdbcType=INTEGER},
		PatternID = #{patternid,jdbcType=INTEGER},
		SizeID = #{sizeid,jdbcType=INTEGER},
		Quantity = #{quantity,jdbcType=INTEGER},
		Price = #{price,jdbcType=DECIMAL},
		BasePrice = #{baseprice,jdbcType=DECIMAL},
		Amount = #{amount,jdbcType=DECIMAL},
		SalePrice = #{saleprice,jdbcType=DECIMAL},
		BaseAmount = #{baseamount,jdbcType=DECIMAL},
		SaleAmount = #{saleamount,jdbcType=DECIMAL},
		CreateTime = #{createtime,jdbcType=TIMESTAMP},
		Creator = #{creator,jdbcType=VARCHAR},
		ModifyTime = #{modifytime,jdbcType=TIMESTAMP},
		Modifier = #{modifier,jdbcType=VARCHAR},
		UpdatedTime = #{updatedtime,jdbcType=TIMESTAMP},
		UseFlag = #{useflag,jdbcType=TINYINT}
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>